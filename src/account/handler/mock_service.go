package handler

import (
	"context"

	"github.com/stretchr/testify/mock"
	"payments/src/account/domain"
)

// MockService is an autogenerated mock type for the Service type
type MockService struct {
	mock.Mock
}

// FindAccountByID provides a mock function with given fields: ctx, id
func (_m *MockService) FindAccountByID(ctx context.Context, id string) (*domain.Account, error) {
	ret := _m.Called(ctx, id)

	var r0 *domain.Account
	if rf, ok := ret.Get(0).(func(context.Context, string) *domain.Account); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Account)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateAccount provides a mock function with given fields: ctx, account
func (_m *MockService) CreateAccount(ctx context.Context, account *domain.Account) (*domain.Account, error) {
	ret := _m.Called(ctx, account)

	var r0 *domain.Account
	if rf, ok := ret.Get(0).(func(context.Context, *domain.Account) *domain.Account); ok {
		r0 = rf(ctx, account)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Account)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *domain.Account) error); ok {
		r1 = rf(ctx, account)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
