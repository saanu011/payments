package handler

import (
	"context"

	"github.com/stretchr/testify/mock"
	"payments/src/transaction/domain"
)

// MockService is an autogenerated mock type for the Service type
type MockService struct {
	mock.Mock
}

// FindTransactionByID provides a mock function with given fields: ctx, id
func (_m *MockService) FindTransactionByID(ctx context.Context, id string) (*domain.Transaction, error) {
	ret := _m.Called(ctx, id)

	var r0 *domain.Transaction
	if rf, ok := ret.Get(0).(func(context.Context, string) *domain.Transaction); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Transaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Insert provides a mock function with given fields: ctx, transaction
func (_m *MockService) CreateTransaction(ctx context.Context, transaction *domain.Transaction) (*domain.Transaction, error) {
	ret := _m.Called(ctx, transaction)

	var r0 *domain.Transaction
	if rf, ok := ret.Get(0).(func(context.Context, *domain.Transaction) *domain.Transaction); ok {
		r0 = rf(ctx, transaction)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Transaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *domain.Transaction) error); ok {
		r1 = rf(ctx, transaction)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
